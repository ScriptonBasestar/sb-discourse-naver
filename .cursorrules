{
  "projectType": "discourse-plugin",
  "description": "Discourse용 플러그인을 개발하고, 카카오 소셜 로그인 기능을 추가합니다.",
  "preferredLanguages": ["ruby", "javascript", "scss"],
  "rules": [
    {
      "goal": "Discourse 플러그인 구조를 따라 개발합니다.",
      "details": [
        "plugin.rb, /lib, /app/controllers, /assets 등 표준 플러그인 디렉토리 구조를 따릅니다.",
        "Gemfile, metadata.json 등 필수 파일 작성",
        "플러그인 내에서 새로운 인증 provider를 등록"
      ]
    },
    {
      "goal": "카카오 소셜 로그인(OAuth2) 인증 기능을 구현합니다.",
      "details": [
        "omniauth-kakao gem을 사용하거나 직접 OAuth2 흐름을 구현합니다.",
        "kakao client id, secret 등 플러그인 설정값 추가",
        "settings.yml 또는 site_settings로 구성",
        "카카오 인증 엔드포인트와의 통신 구현 및 콜백 처리",
        "신규 사용자의 카카오 정보로 사용자 계정 자동 생성/연결"
      ]
    },
    {
      "goal": "코드는 Discourse Ruby on Rails 및 Ember.js 스타일을 따릅니다.",
      "details": [
        "Ruby 코드에는 Rubocop 스타일을 최대한 맞추세요.",
        "프론트엔드는 Discourse Ember.js 컨벤션 준수",
        "번역(로케일)과 테스트 코드(기본 RSpec) 작성도 지향"
      ]
    },
    {
      "goal": "개발 편의를 위해 각 기능을 별도 커밋/PR로 관리합니다.",
      "details": [
        "카카오 OAuth provider 구현을 별도 PR/커밋으로 구분",
        "README.md에 주요 설치/연동법 설명 추가"
      ]
    },
    {
      "goal": "테스트 및 번역 파일 작성도 권장합니다.",
      "details": [
        "RSpec을 활용한 기본 인증 플로우 테스트 작성",
        "config/locales/ko.yml 등 로케일 파일 작성"
      ]
    },
    {
      "goal": "의존성 및 환경",
      "details": [
        "Ruby, Gem 등은 discourse 메인 앱과 동일 버전 사용 권장",
        "README.md에 의존성 및 환경설정 안내 추가"
      ]
    }
  ],
  "examples": [
    {
      "prompt": "카카오 소셜 로그인 provider를 등록하는 plugin.rb 예시 코드를 보여줘.",
      "output": "Discourse::Application.routes.append do ... end 블록과 함께 omniauth provider 등록"
    },
    {
      "prompt": "카카오 API에서 프로필 정보 받아와서 사용자 계정에 저장하는 메서드를 추가해줘.",
      "output": "callback controller에서 카카오 access_token으로 API 호출 후 user 정보 매핑"
    }
  ],
  "avoid": [
    "불필요한 타사 OAuth 예시(네이버, 구글 등)는 생략",
    "Discourse의 기존 SSO/OmniAuth 연동 규칙 무시는 피할 것"
  ]
}
